{"pageProps":{"title":"Escape Analysis in Go: Understanding and Optimizing Memory Allocation","roomName":"Room A","sessionId":"A9-S","description":"Proposal\r\nTitle:\r\n\"Escape Analysis in Go: Understanding and Optimizing Memory Allocation\"\r\nAbstract:\r\nGo is a popular programming language known for its performance and efficiency. However, in order to achieve maximum performance, it's important to understand how Go manages memory. One of the key concepts in this area is escape analysis, a technique used by the Go runtime to determine when and where to allocate memory on the heap. In this talk, we will cover the basics of escape analysis in Go, including how it works, common pitfalls to watch out for, and techniques for optimizing memory allocation in your Go programs.\r\nOutline: [20 minutes talk]\r\nIntroduction to escape analysis in Go [8 minutes]\r\nRecap of memory allocation (stack/heap) and pointers \r\nExperiments to prove why escape analysis is important\r\nExplanation of what escape analysis is and how it works in Go\r\nHow does escape analysis affect memory allocation\r\nCommon pitfalls to watch out for [4 minutes]\r\nHow to avoid unnecessary heap allocation\r\nSome special cases for escape analysis\r\nTechniques for optimizing memory allocation in Go programs [5 minutes]\r\nHow to use the \"go build\" flag to check for escape analysis\r\nBest practices for variable declaration\r\nMeasuring the performance improvements\r\nConclusion [3 minutes]\r\nSummary of key takeaways\r\nAdditional resources for further learning\r\nOriginality:\r\nThe Go documentation provides some information about what escape analysis is and a general overview of how that works. This talk will extend those ideas and discuss why it is important to know about this optimization and the cases where it works/not works. The talk will also include some major guidelines about how to use it for the general audience to consider. \r\n\r\nTarget Audience:\r\nThis talk is aimed at Go developers of all levels who are interested in improving the performance of their applications. Whether you are a beginner just starting out with Go or an experienced developer looking to optimize your code, this talk will provide valuable insights and information. The following groups will particularly benefit from this talk:\r\nBeginner Go developers: This talk will provide a comprehensive introduction to escape analysis and its benefits, making it an excellent starting point for those new to the language.\r\nExperienced Go developers: For those familiar with Go, this talk will provide a deeper understanding of escape analysis and its implementation, as well as best practices for applying it in real-world projects.\r\nPerformance-focused developers: This talk will provide valuable information for developers who are focused on optimizing the performance of their applications. Attendees will learn about escape analysis and how it can be used to reduce the number of heap allocations and improve the performance of their applications.\r\n\r\nBackground:\r\nI am a software engineer with a year of experience in developing Go-based applications. I have experience in Go memory management and optimization, and I am passionate about helping developers write more efficient Go code.\r\nI got introduced to this topic while finding ways to optimize the Go code. I was curious about how the memory allocations in Go work and found something related to Escape Analysis for the first time. As I learned more, I found this optimization beneficial and could be utilized more.\r\nI am confident that this talk would be of great interest to the attendees of Go Conference 2023 as I will be sharing my knowledge on a topic that is crucial for developers who want to achieve maximum performance in their Go-based applications.\r\n","sessionLevel":"Intermediate","sessionType":"Challenge Session(20min)","recordingUrl":null,"slideUrl":null,"speaker":{"fullName":"Harsh Gupta","profilePicture":"https://sessionize.com/image/d1d7-400o400o2-nGUPXtqiZS9pbXePf83k9f.jpg","bio":"I am a software engineer with a year of experience in developing Go-based applications. I have experience in Go memory management and optimization, and I am passionate about helping developers write more efficient Go code.","tagLine":"Software Engineer at Money Forward, Inc.","twitterUserName":"dhrsh24"}},"__N_SSG":true}