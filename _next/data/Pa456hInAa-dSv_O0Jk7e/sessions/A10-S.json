{"pageProps":{"title":"Go1.20からサポートされるtree構造のerrの紹介と、treeを考慮した複数マッチができるライブラリを作った話","roomName":"Room A","sessionId":"A10-S","description":"Go1.20からはtree構造のエラーがサポートされることになりました。\r\n詳細は以下のrelease noteでも言及されています。\r\nhttps://tip.golang.org/doc/go1.20#errors\r\n\r\nもともとのproposalである https://github.com/golang/go/issues/53435 での議論をふまえ、Go1.20時点では、標準errors.Is/Asは以下のデザインとなっています。\r\n\r\n- treeを深さ優先探索する\r\n- マッチしたものがあればそこで探索を打ち切り結果を返す\r\n- tree上のすべての枝がIs/Asにマッチすることを保証しない\r\n\r\nですが、tree構造とのマッチ判定はユースケースによってはさらにいくつかの要求が考えられます。たとえば\r\n\r\n- 分岐した全枝についての一致を確認するより厳密な同一性判定\r\n- treeのなかで一致した要素をすべて取り出す\r\n\r\nなどです。このようなより柔軟な要求に対して、現状の標準errors.Is/Asを利用することはできません。\r\n\r\n今回は元となった \"errors: add support for wrapping multiple errors\" proposalでの議論をおさらいしつつ、標準errorsでは実現できないいくつかの要求についてマッチ処理を実装したので紹介します。\r\nまた、実装中に感じた課題などについても触れれればと思います。\r\n\r\n実装したレポジトリは以下です。\r\nhttps://github.com/convto/errortree\r\n\r\ntree構造のerrはGo1.20から追加された新しい概念であり、整理のために多くの実験や議論が必要だと思っています。\r\nこの発表で該当の議論に関心を持つ方が増えれば嬉しいです。","sessionLevel":null,"sessionType":"Short Talk(20min)","recordingUrl":null,"slideUrl":null,"speaker":{"fullName":"奥村 優哉","profilePicture":"https://sessionize.com/image/09e1-400o400o2-4267faff-b45c-4867-868f-3dcca0492d3e.jpg","bio":"レイヤ低めの技術、暗号まわり、分散コンピューティングに興味があります","tagLine":"株式会社LayerX","twitterUserName":"convto"}},"__N_SSG":true}