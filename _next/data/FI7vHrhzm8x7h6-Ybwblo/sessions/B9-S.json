{"pageProps":{"title":"Go1.19から始めるGCのチューニング方法","roomName":"Room B","sessionId":"B9-S","description":"Go1.19のリリースにより新しくGOMEMLIMITという設定値が増えました。GOMEMLIMITが導入されたことによりヒープメモリ量の上限をユーザー側から制御できるようになりました。Go1.19以前のGCのチューニング方法はGOGCだけでしたが、GOMEMLIMITが導入されたことによりGCのチューニング方法の幅が広がりました。\r\nしかしGoは設定値を細かくいじらなくてもランタイムがある程度の最適化を行ってくれるため、一般的なAPIサーバーの開発等ではGOGCやGOMEMLIMITを意識することは少ないかと思います。そのため、これらの知見は中々溜まっておらず参考にする資料等も少ないのが現状です。\r\nそこで本セッションではGOGC・GOMEMLIMITはどんな役割かについて発表します。また内部実装を見ることで仕組みから理解することを目的に発表したいと思います。また僕自身が経験した内容を基にGCチューニングの事例から活用方法についてもお伝えします。視聴者は本セッションを見ることでGOGC・GOMEMLIMITについての知見を深めることができます。また活用事例を通してご自身のプロダクトでGCチューニングをするべきかどうかを判断することもできるようになります。","sessionLevel":"beginner","sessionType":"Challenge Session(20min)","recordingUrl":"https://www.youtube.com/embed/vcZ16xQSnJ8","slideUrl":"https://speakerdeck.com/hagatake/go1-dot-19karashi-merugcnotiyuningufang-fa","speaker":{"fullName":"Takeshi Haga","profilePicture":"https://sessionize.com/image/3069-400o400o2-T42jZSjEt5AEFFD9ZbXQua.jpeg","bio":"バックエンドエンジニア","tagLine":"学生","twitterUserName":"take_twit_2"}},"__N_SSG":true}