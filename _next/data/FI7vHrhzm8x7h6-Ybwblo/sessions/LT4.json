{"pageProps":{"title":"Information Schemaから自動生成する型付きORM spannent","roomName":"Room A","sessionId":"LT4","description":"GoでRDBを使う際には標準のdatabase/sqlがありますが、ORMを使用することもあります。\r\nMySQLやPostgreSQLのような広く普及したDBにはSQLドライバが存在したり、対応したORMが多数存在します。\r\nしかしNewSQLのような新しいDBにはそれらが存在しないことも多いです。\r\n\r\nまたGoはパターン化されたコードを自動生成する機構を言語の標準機能だけで作りやすい特徴があります。\r\n特にORMの領域では近年有名なEntというパッケージがあります。\r\nEntではGoでテーブル定義を行い、各テーブル・カラムに対応した型付きのコードを自動生成する特徴があります。\r\n自動生成されたコードは基本的にメソッドチェーンで記述することができます。また\r\nマイグレーション機能も存在するため、Goのテーブル定義をDBに反映することもできます。\r\nGormや他の自動生成ではないORMと比較し、存在するテーブル・カラム名や型がコード上に定義されているため、DDLを参考せずともGo上だけでテーブル定義が把握できることや、名前や型を間違えにくいことが利点です。\r\nしかしEntも対応したNewSQLの種類は少ないです。\r\n\r\nそこで今回はNewSQLの一種であるGoogle Cloud SpannerのORMを自動生成しました。\r\n生成されるコードは上述の利点からEntを参考にしています。\r\nまた最小限の機能を持つORMとしたかったため、マイグレーション機能は持たせていません。\r\nそのためテーブル定義はGoで定義するのではなく、Information Schemaから読み取ることで、実際のDBのテーブル定義との同期を図っています。\r\n\r\n本セッションを聴くことで、Spanner以外にもORMをGoで作成する際の実装ヒントを得ることができます。\r\n例えばチームによってSnowflakeやBigQueryのORMを作成したいモチベーションがある場合、参考にすることができます。\r\nまたORMに限らずテーブル定義所の生成やテストコードの生成等のGoで自動生成する強みとアイデアを知ることが可能です。","sessionLevel":null,"sessionType":"LT(5min)","recordingUrl":"https://www.youtube.com/embed/eshHBSpD-6U","slideUrl":null,"speaker":{"fullName":"Yuki Kume","profilePicture":"https://sessionize.com/image/02f3-400o400o2-VJuim1UPZfjtw9fhVKfVLn.png","bio":"2021年に株式会社サイバーエージェントに新卒で入社。\r\n一年ほど広告配信基盤（DSP）の運用を経た後、小売DX領域に異動し、バックエンドの開発を行っている。","tagLine":"株式会社サイバーエージェント","twitterUserName":"kume_ru"}},"__N_SSG":true}