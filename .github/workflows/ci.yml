name: CI
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'

      - name: Cache build
        uses: actions/cache@v3
        id: cache_build
        with:
          path: |
            '**/node_modules'
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-build-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-build-${{ hashFiles('**/yarn.lock') }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Echo cache build outputs
        run: echo '${{ toJSON(steps.cache_build.outputs) }}'

      - name: Create .env file
        run: |
          echo "${{ secrets.ENV }}" > .env

      - name: Install deps
        if: ${{ steps.cache_build.outputs.cache-hit != 'true' }}
        run: yarn install --frozen-lockfile

      - name: Lint
        # next lint caches .next/cache/eslint
        if: ${{ steps.cache_build.outputs.cache-hit != 'true' }}
        run: yarn lint

      - name: Build
        run: yarn build

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./out
